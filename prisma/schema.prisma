// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id
  username      String?       @unique
  email         String?       @unique
  bio           String?
  avatarUrl     String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  videos        Video[]
  interactions  Interaction[]
  followers     Follow[]      @relation("following")
  following     Follow[]      @relation("follower")
}

model Video {
  id            String        @id @default(cuid())
  title         String
  description   String?
  videoUrl      String
  thumbnailUrl  String?
  duration      Int?
  userId        String
  user          User          @relation(fields: [userId], references: [id])
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  viewCount     Int           @default(0)
  interactions  Interaction[]
  
  @@index([userId])
}

model Interaction {
  id            String     @id @default(cuid())
  type          String     // like, share, watch_complete
  userId        String
  videoId       String
  user          User       @relation(fields: [userId], references: [id])
  video         Video      @relation(fields: [videoId], references: [id])
  createdAt     DateTime   @default(now())
  
  @@index([userId])
  @@index([videoId])
  @@unique([userId, videoId, type])
}

model Follow {
  id            String   @id @default(cuid())
  followerId    String
  followingId   String
  follower      User     @relation("follower", fields: [followerId], references: [id])
  following     User     @relation("following", fields: [followingId], references: [id])
  createdAt     DateTime @default(now())

  @@unique([followerId, followingId])
  @@index([followerId])
  @@index([followingId])
}